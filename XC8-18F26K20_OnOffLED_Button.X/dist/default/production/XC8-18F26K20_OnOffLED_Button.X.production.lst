

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Feb 01 18:56:48 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Generated 06/04/2022 GMT
    17                           ; 
    18                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F26K20 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _LATCbits	set	3979
    51  0000                     _PORTAbits	set	3968
    52  0000                     _ANSEL	set	3966
    53  0000                     _PORTA	set	3968
    54  0000                     _TRISA	set	3986
    55  0000                     _TRISC	set	3988
    56  0000                     _TRISB	set	3987
    57  0000                     _LATA	set	3977
    58  0000                     _PORTC	set	3970
    59  0000                     _PORTB	set	3969
    60  0000                     _LATC	set	3979
    61  0000                     _LATB	set	3978
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66  00FF60                     __pcinit:
    67                           	callstack 0
    68  00FF60                     start_initialization:
    69                           	callstack 0
    70  00FF60                     __initialization:
    71                           	callstack 0
    72                           
    73                           ; Clear objects allocated to COMRAM (2 bytes)
    74  00FF60  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    75  00FF62  6A01               	clrf	__pbssCOMRAM& (0+255),c
    76  00FF64                     end_of_initialization:
    77                           	callstack 0
    78  00FF64                     __end_of__initialization:
    79                           	callstack 0
    80  00FF64  0100               	movlb	0
    81  00FF66  EFB5  F07F         	goto	_main	;jump to C main() function
    82                           
    83                           	psect	bssCOMRAM
    84  000001                     __pbssCOMRAM:
    85                           	callstack 0
    86  000001                     _BUTON_Ticks:
    87                           	callstack 0
    88  000001                     	ds	1
    89  000002                     _BUTON_Status:
    90                           	callstack 0
    91  000002                     	ds	1
    92                           
    93                           	psect	cstackCOMRAM
    94  000003                     __pcstackCOMRAM:
    95                           	callstack 0
    96  000003                     ??_IO_Task:
    97  000003                     
    98                           ; 1 bytes @ 0x0
    99  000003                     	ds	1
   100  000004                     
   101                           ; 1 bytes @ 0x1
   102 ;;
   103 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   104 ;;
   105 ;; *************** function _main *****************
   106 ;; Defined at:
   107 ;;		line 13 in file "main.c"
   108 ;; Parameters:    Size  Location     Type
   109 ;;		None
   110 ;; Auto vars:     Size  Location     Type
   111 ;;		None
   112 ;; Return value:  Size  Location     Type
   113 ;;                  1    wreg      void 
   114 ;; Registers used:
   115 ;;		wreg, status,2, status,0, cstack
   116 ;; Tracked objects:
   117 ;;		On entry : 0/0
   118 ;;		On exit  : 0/0
   119 ;;		Unchanged: 0/0
   120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   125 ;;Total ram usage:        0 bytes
   126 ;; Hardware stack levels required when called: 1
   127 ;; This function calls:
   128 ;;		_IO_Task
   129 ;;		_MCU_Initialize
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136  00FF6A                     __ptext0:
   137                           	callstack 0
   138  00FF6A                     _main:
   139                           	callstack 30
   140  00FF6A                     
   141                           ;main.c: 14:     MCU_Initialize();
   142  00FF6A  ECBD  F07F         	call	_MCU_Initialize	;wreg free
   143  00FF6E                     l750:
   144                           
   145                           ;main.c: 16:         IO_Task();
   146  00FF6E  ECD6  F07F         	call	_IO_Task	;wreg free
   147  00FF72  EFB7  F07F         	goto	l750
   148  00FF76  EF00  F000         	goto	start
   149  00FF7A                     __end_of_main:
   150                           	callstack 0
   151                           
   152 ;; *************** function _MCU_Initialize *****************
   153 ;; Defined at:
   154 ;;		line 20 in file "mcu.c"
   155 ;; Parameters:    Size  Location     Type
   156 ;;		None
   157 ;; Auto vars:     Size  Location     Type
   158 ;;		None
   159 ;; Return value:  Size  Location     Type
   160 ;;                  1    wreg      void 
   161 ;; Registers used:
   162 ;;		wreg, status,2
   163 ;; Tracked objects:
   164 ;;		On entry : 0/0
   165 ;;		On exit  : 0/0
   166 ;;		Unchanged: 0/0
   167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   172 ;;Total ram usage:        0 bytes
   173 ;; Hardware stack levels used: 1
   174 ;; This function calls:
   175 ;;		Nothing
   176 ;; This function is called by:
   177 ;;		_main
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           	psect	text1
   182  00FF7A                     __ptext1:
   183                           	callstack 0
   184  00FF7A                     _MCU_Initialize:
   185                           	callstack 30
   186  00FF7A                     
   187                           ;mcu.c: 21:     TRISA = 0b00000111;
   188  00FF7A  0E07               	movlw	7
   189  00FF7C  6E92               	movwf	146,c	;volatile
   190                           
   191                           ;mcu.c: 22:     TRISB = 0x00;
   192  00FF7E  0E00               	movlw	0
   193  00FF80  6E93               	movwf	147,c	;volatile
   194                           
   195                           ;mcu.c: 23:     TRISC = 0x00;
   196  00FF82  0E00               	movlw	0
   197  00FF84  6E94               	movwf	148,c	;volatile
   198                           
   199                           ;mcu.c: 25:     PORTA = 0x00;
   200  00FF86  0E00               	movlw	0
   201  00FF88  6E80               	movwf	128,c	;volatile
   202                           
   203                           ;mcu.c: 26:     PORTB = 0x00;
   204  00FF8A  0E00               	movlw	0
   205  00FF8C  6E81               	movwf	129,c	;volatile
   206                           
   207                           ;mcu.c: 27:     PORTC = 0x00;
   208  00FF8E  0E00               	movlw	0
   209  00FF90  6E82               	movwf	130,c	;volatile
   210                           
   211                           ;mcu.c: 29:     LATA = 0x00;
   212  00FF92  0E00               	movlw	0
   213  00FF94  6E89               	movwf	137,c	;volatile
   214                           
   215                           ;mcu.c: 30:     LATB = 0x00;
   216  00FF96  0E00               	movlw	0
   217  00FF98  6E8A               	movwf	138,c	;volatile
   218                           
   219                           ;mcu.c: 31:     LATC = 0x00;
   220  00FF9A  0E00               	movlw	0
   221  00FF9C  6E8B               	movwf	139,c	;volatile
   222                           
   223                           ;mcu.c: 33:     ANSEL = 0x00;
   224  00FF9E  0E00               	movlw	0
   225  00FFA0  6E7E               	movwf	126,c	;volatile
   226                           
   227                           ;mcu.c: 36:     BUTON_Ticks = 0;
   228  00FFA2  0E00               	movlw	0
   229  00FFA4  6E01               	movwf	_BUTON_Ticks^0,c
   230                           
   231                           ;mcu.c: 37:     BUTON_Status = 0;
   232  00FFA6  0E00               	movlw	0
   233  00FFA8  6E02               	movwf	_BUTON_Status^0,c
   234  00FFAA  0012               	return		;funcret
   235  00FFAC                     __end_of_MCU_Initialize:
   236                           	callstack 0
   237                           
   238 ;; *************** function _IO_Task *****************
   239 ;; Defined at:
   240 ;;		line 40 in file "mcu.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2, status,0
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   258 ;;Total ram usage:        1 bytes
   259 ;; Hardware stack levels used: 1
   260 ;; This function calls:
   261 ;;		Nothing
   262 ;; This function is called by:
   263 ;;		_main
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           	psect	text2
   268  00FFAC                     __ptext2:
   269                           	callstack 0
   270  00FFAC                     _IO_Task:
   271                           	callstack 30
   272  00FFAC                     
   273                           ;mcu.c: 42:     if(PORTAbits.RA0==1){
   274  00FFAC  A080               	btfss	128,0,c	;volatile
   275  00FFAE  EFDB  F07F         	goto	u11
   276  00FFB2  EFDD  F07F         	goto	u10
   277  00FFB6                     u11:
   278  00FFB6  EFF3  F07F         	goto	l746
   279  00FFBA                     u10:
   280  00FFBA                     
   281                           ;mcu.c: 43:         BUTON_Ticks++;
   282  00FFBA  2A01               	incf	_BUTON_Ticks^0,f,c
   283  00FFBC                     
   284                           ;mcu.c: 44:         if(BUTON_Ticks>20){
   285  00FFBC  0E14               	movlw	20
   286  00FFBE  6401               	cpfsgt	_BUTON_Ticks^0,c
   287  00FFC0  EFE4  F07F         	goto	u21
   288  00FFC4  EFE6  F07F         	goto	u20
   289  00FFC8                     u21:
   290  00FFC8  EFEA  F07F         	goto	l744
   291  00FFCC                     u20:
   292  00FFCC                     
   293                           ;mcu.c: 45:             BUTON_Ticks = 0;
   294  00FFCC  0E00               	movlw	0
   295  00FFCE  6E01               	movwf	_BUTON_Ticks^0,c
   296  00FFD0                     
   297                           ;mcu.c: 46:             BUTON_Status ^= 1;
   298  00FFD0  0E01               	movlw	1
   299  00FFD2  1A02               	xorwf	_BUTON_Status^0,f,c
   300  00FFD4                     l744:
   301                           
   302                           ;mcu.c: 48:         _delay((unsigned long)((10)*(20000000/4000.0)));
   303  00FFD4  0E41               	movlw	65
   304  00FFD6  6E03               	movwf	??_IO_Task^0,c
   305  00FFD8  0EEE               	movlw	238
   306  00FFDA                     u47:
   307  00FFDA  2EE8               	decfsz	wreg,f,c
   308  00FFDC  D7FE               	bra	u47
   309  00FFDE  2E03               	decfsz	??_IO_Task^0,f,c
   310  00FFE0  D7FC               	bra	u47
   311  00FFE2  F000 F000          	nop2	
   312  00FFE6                     l746:
   313                           
   314                           ;mcu.c: 52:     if(BUTON_Status){
   315  00FFE6  5002               	movf	_BUTON_Status^0,w,c
   316  00FFE8  B4D8               	btfsc	status,2,c
   317  00FFEA  EFF9  F07F         	goto	u31
   318  00FFEE  EFFB  F07F         	goto	u30
   319  00FFF2                     u31:
   320  00FFF2  EFFE  F07F         	goto	l54
   321  00FFF6                     u30:
   322  00FFF6  828B               	bsf	139,1,c	;volatile
   323  00FFF8  EFFF  F07F         	goto	l56
   324  00FFFC                     l54:
   325  00FFFC  928B               	bcf	139,1,c	;volatile
   326  00FFFE                     l56:
   327  00FFFE  0012               	return		;funcret
   328  010000                     __end_of_IO_Task:
   329                           	callstack 0
   330  0000                     
   331                           	psect	rparam
   332  0000                     
   333                           	psect	idloc
   334                           
   335                           ;Config register IDLOC0 @ 0x200000
   336                           ;	unspecified, using default values
   337  200000                     	org	2097152
   338  200000  FF                 	db	255
   339                           
   340                           ;Config register IDLOC1 @ 0x200001
   341                           ;	unspecified, using default values
   342  200001                     	org	2097153
   343  200001  FF                 	db	255
   344                           
   345                           ;Config register IDLOC2 @ 0x200002
   346                           ;	unspecified, using default values
   347  200002                     	org	2097154
   348  200002  FF                 	db	255
   349                           
   350                           ;Config register IDLOC3 @ 0x200003
   351                           ;	unspecified, using default values
   352  200003                     	org	2097155
   353  200003  FF                 	db	255
   354                           
   355                           ;Config register IDLOC4 @ 0x200004
   356                           ;	unspecified, using default values
   357  200004                     	org	2097156
   358  200004  FF                 	db	255
   359                           
   360                           ;Config register IDLOC5 @ 0x200005
   361                           ;	unspecified, using default values
   362  200005                     	org	2097157
   363  200005  FF                 	db	255
   364                           
   365                           ;Config register IDLOC6 @ 0x200006
   366                           ;	unspecified, using default values
   367  200006                     	org	2097158
   368  200006  FF                 	db	255
   369                           
   370                           ;Config register IDLOC7 @ 0x200007
   371                           ;	unspecified, using default values
   372  200007                     	org	2097159
   373  200007  FF                 	db	255
   374                           
   375                           	psect	config
   376                           
   377                           ; Padding undefined space
   378  300000                     	org	3145728
   379  300000  FF                 	db	255
   380                           
   381                           ;Config register CONFIG1H @ 0x300001
   382                           ;	Oscillator Selection bits
   383                           ;	FOSC = HS, HS oscillator
   384                           ;	Fail-Safe Clock Monitor Enable bit
   385                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   386                           ;	Internal/External Oscillator Switchover bit
   387                           ;	IESO = OFF, Oscillator Switchover mode disabled
   388  300001                     	org	3145729
   389  300001  02                 	db	2
   390                           
   391                           ;Config register CONFIG2L @ 0x300002
   392                           ;	Power-up Timer Enable bit
   393                           ;	PWRT = OFF, PWRT disabled
   394                           ;	Brown-out Reset Enable bits
   395                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   396                           ;	Brown Out Reset Voltage bits
   397                           ;	BORV = 18, VBOR set to 1.8 V nominal
   398  300002                     	org	3145730
   399  300002  1F                 	db	31
   400                           
   401                           ;Config register CONFIG2H @ 0x300003
   402                           ;	Watchdog Timer Enable bit
   403                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   404                           ;	Watchdog Timer Postscale Select bits
   405                           ;	WDTPS = 32768, 1:32768
   406  300003                     	org	3145731
   407  300003  1E                 	db	30
   408                           
   409                           ; Padding undefined space
   410  300004                     	org	3145732
   411  300004  FF                 	db	255
   412                           
   413                           ;Config register CONFIG3H @ 0x300005
   414                           ;	CCP2 MUX bit
   415                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   416                           ;	PORTB A/D Enable bit
   417                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   418                           ;	Low-Power Timer1 Oscillator Enable bit
   419                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   420                           ;	HFINTOSC Fast Start-up
   421                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
   422                           ;	MCLR Pin Enable bit
   423                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   424  300005                     	org	3145733
   425  300005  81                 	db	129
   426                           
   427                           ;Config register CONFIG4L @ 0x300006
   428                           ;	Stack Full/Underflow Reset Enable bit
   429                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   430                           ;	Single-Supply ICSP Enable bit
   431                           ;	LVP = OFF, Single-Supply ICSP disabled
   432                           ;	Extended Instruction Set Enable bit
   433                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   434                           ;	Background Debugger Enable bit
   435                           ;	DEBUG = 0x1, unprogrammed default
   436  300006                     	org	3145734
   437  300006  80                 	db	128
   438                           
   439                           ; Padding undefined space
   440  300007                     	org	3145735
   441  300007  FF                 	db	255
   442                           
   443                           ;Config register CONFIG5L @ 0x300008
   444                           ;	Code Protection Block 0
   445                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   446                           ;	Code Protection Block 1
   447                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   448                           ;	Code Protection Block 2
   449                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   450                           ;	Code Protection Block 3
   451                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   452  300008                     	org	3145736
   453  300008  0F                 	db	15
   454                           
   455                           ;Config register CONFIG5H @ 0x300009
   456                           ;	Boot Block Code Protection bit
   457                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   458                           ;	Data EEPROM Code Protection bit
   459                           ;	CPD = OFF, Data EEPROM not code-protected
   460  300009                     	org	3145737
   461  300009  C0                 	db	192
   462                           
   463                           ;Config register CONFIG6L @ 0x30000A
   464                           ;	Write Protection Block 0
   465                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   466                           ;	Write Protection Block 1
   467                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   468                           ;	Write Protection Block 2
   469                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   470                           ;	Write Protection Block 3
   471                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
   472  30000A                     	org	3145738
   473  30000A  0F                 	db	15
   474                           
   475                           ;Config register CONFIG6H @ 0x30000B
   476                           ;	Configuration Register Write Protection bit
   477                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   478                           ;	Boot Block Write Protection bit
   479                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   480                           ;	Data EEPROM Write Protection bit
   481                           ;	WRTD = OFF, Data EEPROM not write-protected
   482  30000B                     	org	3145739
   483  30000B  E0                 	db	224
   484                           
   485                           ;Config register CONFIG7L @ 0x30000C
   486                           ;	Table Read Protection Block 0
   487                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   488                           ;	Table Read Protection Block 1
   489                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   490                           ;	Table Read Protection Block 2
   491                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   492                           ;	Table Read Protection Block 3
   493                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   494  30000C                     	org	3145740
   495  30000C  0F                 	db	15
   496                           
   497                           ;Config register CONFIG7H @ 0x30000D
   498                           ;	Boot Block Table Read Protection bit
   499                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   500  30000D                     	org	3145741
   501  30000D  40                 	db	64
   502                           tosu	equ	0xFFF
   503                           tosh	equ	0xFFE
   504                           tosl	equ	0xFFD
   505                           stkptr	equ	0xFFC
   506                           pclatu	equ	0xFFB
   507                           pclath	equ	0xFFA
   508                           pcl	equ	0xFF9
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           tblptrl	equ	0xFF6
   512                           tablat	equ	0xFF5
   513                           prodh	equ	0xFF4
   514                           prodl	equ	0xFF3
   515                           indf0	equ	0xFEF
   516                           postinc0	equ	0xFEE
   517                           postdec0	equ	0xFED
   518                           preinc0	equ	0xFEC
   519                           plusw0	equ	0xFEB
   520                           fsr0h	equ	0xFEA
   521                           fsr0l	equ	0xFE9
   522                           wreg	equ	0xFE8
   523                           indf1	equ	0xFE7
   524                           postinc1	equ	0xFE6
   525                           postdec1	equ	0xFE5
   526                           preinc1	equ	0xFE4
   527                           plusw1	equ	0xFE3
   528                           fsr1h	equ	0xFE2
   529                           fsr1l	equ	0xFE1
   530                           bsr	equ	0xFE0
   531                           indf2	equ	0xFDF
   532                           postinc2	equ	0xFDE
   533                           postdec2	equ	0xFDD
   534                           preinc2	equ	0xFDC
   535                           plusw2	equ	0xFDB
   536                           fsr2h	equ	0xFDA
   537                           fsr2l	equ	0xFD9
   538                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_IO_Task

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _IO_Task
                     _MCU_Initialize
 ---------------------------------------------------------------------------------
 (1) _MCU_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_Task                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IO_Task
   _MCU_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      42        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          6B      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      1       3       1        3.2%
BITBIGSFRlll        1E      0       0      40        0.0%
BITBIGSFRlhh         6      0       0      37        0.0%
BITBIGSFRlhl         6      0       0      38        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       3      41        0.0%
DATA                 0      0       3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Feb 01 18:56:48 2023

                     l51 FFF6                       l45 FFAA                       l54 FFFC  
                     l56 FFFE                       u10 FFBA                       u11 FFB6  
                     u20 FFCC                       u21 FFC8                       u30 FFF6  
                     u31 FFF2                       u47 FFDA                      l740 FFCC  
                    l732 FF7A                      l742 FFD0                      l734 FFAC  
                    l750 FF6E                      l744 FFD4                      l736 FFBA  
                    l738 FFBC                      l746 FFE6                      l748 FF6A  
                    wreg 000FE8                     _LATA 000F89                     _LATB 000F8A  
                   _LATC 000F8B          __end_of_IO_Task 0000                     _main FF6A  
                   start 0000             ___param_bank 000000                    ?_main 0003  
                  _ANSEL 000F7E                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94         ??_MCU_Initialize 0003                    status 000FD8  
        __initialization FF60             __end_of_main FF7A                   ??_main 0004  
          __activetblptr 000000                ??_IO_Task 0003                   isa$std 000001  
             __accesstop 0060  __end_of__initialization FF64            ___rparam_used 000001  
         __pcstackCOMRAM 0003                  _IO_Task FFAC                  __Hparam 0000  
                __Lparam 0000                  __pcinit FF60                  __ramtop 1000  
                __ptext0 FF6A                  __ptext1 FF7A                  __ptext2 FFAC  
   end_of_initialization FF64                _PORTAbits 000F80             _BUTON_Status 0002  
    start_initialization FF60              __pbssCOMRAM 0001                 ?_IO_Task 0003  
         _MCU_Initialize FF7A                 _LATCbits 000F8B              _BUTON_Ticks 0001  
 __end_of_MCU_Initialize FFAC                 __Hrparam 0000                 __Lrparam 0000  
        ?_MCU_Initialize 0003                 isa$xinst 000000  
